services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "27017:27017"
    volumes:
      - db:/data/db
      - ./mongodb/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    networks:
      - iwa-api

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: iwa-api
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=production
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - WAIT_HOSTS=$MONGO_HOSTNAME:$MONGO_PORT
      - WAIT_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    ports:
      - "3000:3000"
    volumes:
      - dist:/home/node/app
    networks:
      - iwa-api
    command: sh -c "/wait && cd /home/node/app && node mongodb/populateDb.js && node index.js"

networks:
  iwa-api:
    driver: bridge

volumes:
  db:
  dist:
